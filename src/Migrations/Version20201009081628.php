<?php

declare(strict_types=1);

namespace DoctrineMigrations;

use Doctrine\DBAL\Schema\Schema;
use Doctrine\Migrations\AbstractMigration;

final class Version20201009081628 extends AbstractMigration
{
    public function getDescription(): string
    {
        return 'Добавление макета: гарантийное письмо об отсутствии неисполненных обязательств перед ИФНС';
    }

    public function up(Schema $schema): void
    {
        $this->addSql('
            INSERT INTO template (alias, bank_id, file_path, name, editable, html_template, file_base64) VALUES ("cfGuaranteeLetterOfUnfulfilledIFNS", 100, null, "Гарантийное письмо об отсутствии неисполненных обязательств перед ИФНС", 0, null, "");
            SET @a = SELECT id FROM template WHERE alias = "cfGuaranteeLetterOfUnfulfilledIFNS" AND bank_id = 100;
            INSERT INTO template_parameter (template_id, alias, parent_id, type) VALUES (@a, "nameorg", null, "simple");
            INSERT INTO template_parameter (template_id, alias, parent_id, type) VALUES (@a, "jaaddress", null, "simple");
            INSERT INTO template_parameter (template_id, alias, parent_id, type) VALUES (@a, "zid", null, "simple");
            INSERT INTO template_parameter (template_id, alias, parent_id, type) VALUES (@a, "createddate", null, "simple");
            INSERT INTO template_parameter (template_id, alias, parent_id, type) VALUES (@a, "inn", null, "simple");
            INSERT INTO template_parameter (template_id, alias, parent_id, type) VALUES (@a, "kpp", null, "simple");
            INSERT INTO template_parameter (template_id, alias, parent_id, type) VALUES (@a, "flfio", null, "simple");
        ');
    }

    public function down(Schema $schema): void
    {
        $this->addSql('DELETE FROM template_parameter WHERE (SELECT id FROM template WHERE alias = "cfGuaranteeLetterOfUnfulfilledIFNS") = template_id');
        $this->addSql('DELETE FROM template WHERE alias = "cfGuaranteeLetterOfUnfulfilledIFNS" AND bank_id = 100');
    }
}
